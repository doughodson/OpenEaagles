================================================================================
Changes since v13.07
================================================================================

--------------------------------------------------------------------------------
general

   #
   # added new aero model called LaeroModel to framework. As a result several
   # supporting classes (such as AutoPilot) have been updated to reflect new
   # capabilities
   #

   #
   # throughout the framework, the listed order of all the objects/variables being
   # initialized by constructors has been aligned to match how they are actually
   # initialized by the code generated by the compiler.  This change does not impact
   # the functionality of the codebase, it merely reduces the number of emitted
   # warnings (reorder warning) displayed by recent versions of gcc.
   #

   #
   # added an OE version number to "openeaagles/config.h"
   #

--------------------------------------------------------------------------------
basic

   Identifier class
      1) Modified to insure a single word (i.e., no spaces); any spaces are
      replaced with underscores.

   String class
      1) Changed the manipulator (set) functions to virtual

   # ---------------------------------------------------------------------------
   # Network handler modifications
   # ---------------------------------------------------------------------------
   # updated error messages in several of the network handlers.
   #
   # created a subdirectory called "nethandlers" that now contains:
   # TcpHandler, TcpClient, TcpServerMultiple, TcpServerSingle,
   # UdpBroadcastHandler, UdpMulticastHandler and UdpUnicastHandler.
   # (Note that UDP handlers have been renamed to better reflect transport
   # protocol)
   # 
   # all subclasses of TcpHandler are now stored in separate files, with filenames
   #  matching classnames.
   #
   # NetHandler was derived from Object, it is now derived from Component to enable
   # the selection of information and error messages via input file.
   #
   # the scope resolution operator "::" was added to all system calls related to
   # network operations.  Functions appended with operator include ioctl,
   # ioctlsocket, setsockopt, gethostname, socket, listen, accept, perror,
   # bind, closesocket, recvform, connect, sendto, inet_addr,
   # and inet_ntoa

--------------------------------------------------------------------------------
basicGL

   Translator class
      1) Fixed copy constructor -- now properly copies all attributes

   Field class
      1) Updated serialize method

--------------------------------------------------------------------------------
dis

   #
   # renamed several source (.cpp) files to a name that better reflects what it contains.
   # for example "NetIOPlatforms.cpp" has been broken into two files "NetIO-entity-state.cpp"
   # and "Nib-entity-state.cpp" to indicate where each class implements DIS entity state
   # processing.  (No functional changes have been made - change is transparent to end user)
   #

--------------------------------------------------------------------------------
gui-glut

--------------------------------------------------------------------------------
maps

   # general cleanup of classes and code (removal of tabs, docs, etc)

   CadrgMap class
      1) fixed a bug in findBestZone() method

--------------------------------------------------------------------------------
otw


--------------------------------------------------------------------------------
recorder


--------------------------------------------------------------------------------
simulation

   #
   # Separated the IrSensor and MergingIrSensor classes from being defined within
   # the same physical file called "IrSensor.h/cpp"
   #

   AutoPilot class
      1) added several new slots that define default pilot flight actions or 
         characteristics, such as the maximum rate of turn, bank angle, max
         climb, etc.  These are pilot characteristics in defining how a plane
         is flown -- not physical performance characteristics associated with
         the vehicle itself.

   AngleOnlyTrackManager class
      1) initialized a few previously uninitialized variables -- the initialization
         didn't matter, but we like to adhere to coding stds.

   DynamicsModels class
      1) set commanded heading, velocity, and altitude now take additional
         parameters to define change rates.

   Radar class
      1) Added check to ensure a track mgr is available to sent reports, before
         doing so (fix)

   RfSensor class
      1) Updated serialize method
      2) setSlotModeSingle() -- unref()'d the new Pair (fixed a "memory drip")

   RfSystem class
      1) Updated serialize method

   ScanGimbal class
      1) Updated serialize method

   Simulation class
      1) updateData() -- corrected the delta time being passed to updateBgPlayerList()
         when more than one background thread is being used (bug fix)
      2) updated timing calculations so that a simulation can run very slowly (< 1 Hz)

   Station class
      1) added slots to set the stack size of the default time critical,
      network and background threads.

   TrackManager class
      1) converted several local member function arrays to class member arrays.
      2) Corrected the usage of the boolean matrixes 'report2TrackMatch' from int to bool

   Weapon class
      1) added storage for target velocity data
      2) updated flags to set data logging

--------------------------------------------------------------------------------
vehicle

   JSBSimModel class
      1) interface updated to account for changes in base DynamicsModels class

   RacModel class
      1) interface updated to account for changes in base DynamicsModels class

   LaeroModel class
      1) added new simple, lightweight aero model

--------------------------------------------------------------------------------

